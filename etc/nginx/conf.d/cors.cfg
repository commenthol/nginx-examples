# nginx v1.10.1
# CORS headers
# see https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS

if ($http_origin ~* '^https?:\/\/(([a-z0-9]+\.)?my\.domain|localhost)(:[0-9]+)?$') {
    set $cors 'true';
}

if ($request_method = 'OPTIONS') {
    set $cors '${cors}options';
}

if ($cors = 'true') {
    add_header 'Access-Control-Allow-Origin' $http_origin always;
    # make requests aware of HTTP Cookies and HTTP Authentication information.
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # unfortunately there is no way to include `security.include` yet
    # security headers
    add_header 'Content-Security-Policy' $header_content_security_policy always;
    add_header 'X-Content-Type-Options' 'nosniff' always;
    add_header 'X-XSS-Protection' '1; mode=block' always;
    add_header 'X-Frame-Options' 'DENY' always;
    # SSL only
    add_header 'Strict-Transport-Security' 'max-age=31536000; includeSubDomains; preload' always;
    add_header 'Public-Key-Pins' $header_public_key_pins always;
}

if ($cors = 'options') {
    return 405;
}

if ($cors = 'trueoptions') {
    add_header 'Access-Control-Allow-Origin' $http_origin;
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, HEAD';
    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,Keep-Alive,X-Requested-With,If-Modified-Since';
    add_header 'Access-Control-Max-Age' 2592000; 
    add_header 'Content-Length' 0;
    add_header 'Content-Type' 'text/plain charset=UTF-8';
    return 204;
}
